version: "3.9"
services:
  zookeeper:
    image: wurstmeister/zookeeper
    restart: "always"
    ports:
      - "2181:2181"
    networks:
      internal:

  kafka:
    image: wurstmeister/kafka:2.13-2.7.0
    restart: "always"
    ports:
      - "9092:9092"
    environment:
      HOSTNAME_COMMAND: "route -n | awk '/UG[ \t]/{print $$2}'"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "quote-events-topic:3:3"
    networks:
      internal:
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka2:
    image: wurstmeister/kafka:2.13-2.7.0
    restart: "always"
    ports:
      - "9093:9092"
    environment:
      HOSTNAME_COMMAND: "route -n | awk '/UG[ \t]/{print $$2}'"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      internal:
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka3:
   image: wurstmeister/kafka:2.13-2.7.0
   restart: "always"
   ports:
     - "9094:9092"
   environment:
     HOSTNAME_COMMAND: "route -n | awk '/UG[ \t]/{print $$2}'"
     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
   networks:
     internal:
   volumes:
     - /var/run/docker.sock:/var/run/docker.sock
       
  kafdrop:
    image: obsidiandynamics/kafdrop:3.27.0
    restart: "always"
    ports:
        - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092,kafka2:9092,kafka3:9092"
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"
    networks:
      internal:
    depends_on:
      - "kafka"
  
networks:
  internal: